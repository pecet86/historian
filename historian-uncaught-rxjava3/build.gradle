apply plugin: 'com.android.library'
apply plugin: 'com.github.ben-manes.versions'
//apply plugin: 'com.github.dcendents.android-maven'

apply from: "$rootDir/gradle/dependencies.gradle"
apply from: "$rootDir/gradle/configuration.gradle"

// CI
def isCi = "true" == System.getenv("CI")
def preDexEnabled = "true" == System.getProperty("pre-dex", "true")

android {
  resourcePrefix config.resourcePrefix

  compileSdkVersion config.compileSdkVersion
  buildToolsVersion config.buildToolsVersion

  defaultConfig {
    minSdkVersion config.minSdkVersion
    targetSdkVersion config.targetSdkVersion
    versionCode versionCode()
    versionName versionName()

    consumerProguardFiles 'proguard-rules.pro'
  }

  dexOptions {
    // Skip pre-dexing when running on CI or when disabled via -Dpre-dex=false.
    preDexLibraries = preDexEnabled && !isCi
  }

  compileOptions {
    // Flag to enable support for the new language APIs
    //coreLibraryDesugaringEnabled true
    //https://developer.android.com/studio/write/java8-support-table
    sourceCompatibility = config.sourceCompatibility
    targetCompatibility = config.targetCompatibility
  }

  lintOptions {
    abortOnError false
  }

  sourceSets {
    main.java.srcDirs += 'src/main/java'
  }
}

dependencies {
  api project(':historian-core')
  api project(':historian-uncaught-handler')

  implementation "androidx.annotation:annotation:${deps.annotation}"

  //RxJava
  api "io.reactivex.rxjava3:rxjava:${deps.rxjava3}"
  api "io.reactivex.rxjava3:rxandroid:${deps.rxandroid3}"

  //noinspection AnnotationProcessorOnCompilePath
  compileOnly "org.projectlombok:lombok:${deps.lombok}"
  annotationProcessor "org.projectlombok:lombok:${deps.lombok}"
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"