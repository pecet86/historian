// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: project.file("gradle/version/version.gradle")

buildscript {
  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:4.1.1'

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
    classpath 'com.github.panpf.bintray-publish:bintray-publish:1.0.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
    classpath 'org.jacoco:org.jacoco.core:0.8.6'
    classpath 'org.ajoberstar:gradle-git:1.7.2'
  }
}

allprojects {
  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

apply plugin: 'org.ajoberstar.grgit'
def tagName = "v" + versionName()

def getStatus() {
  def describe = grgit.describe()
  def pattern = /^(.*)-([0-9]+)-(g[0-9a-z]+)$/
  def tag = describe =~ pattern

  if (tag.matches()) {
    tag = tag[0][1];
    def logs = grgit.log {
      range(tag, 'HEAD')
    }
    if (!logs.isEmpty()) {
      return logs
          .collect { "Autor: ${it.author.name}; Data: ${it.getDate().format('yyyy-MM-dd HH:mm:ss')}; Opis:${it.fullMessage}" }
          .asImmutable()
          .toString()
    } else {
      return null
    }
  } else {
    return null
  }
}

task releng {
  description = "Application release: $tagName"
  doLast {
    def changes = getStatus()
    if (changes == null) {
      throw new RuntimeException("There are changes not commited yet.\n$changes")
    }

    //add tag
    grgit.tag.add {
      name = tagName
      message = "Release of $tagName"
    }
  }
}